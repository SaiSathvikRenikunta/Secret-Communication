#install cryptography using the following command in command prompt
#pip install cryptography
from cryptography.fernet import Fernet 
#ENCRYPTIONS 
#Converstion of string characters to their respective ASCII values 
def string_ascii(): 
    try: 
        text = input("enter a string to convert into ascii values:") 
        ascii_values = [] 
        for character in text: 
            ascii_values.append(ord(character)) 
        print("Ascii values characters in string are ",ascii_values) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Converstion of decimal number to a binary number 
def decimalToBinary(n): 
    try: 
        if(n >= 1): 
            decimalToBinary(n//2) 
        print(n%2, end=' ') 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Converstion of Decimal to a Hexal number 
def decimalToHexal(decimal): 
    try:
        conversion_table = {0: '0', 1: '1', 2: '2', 3: '3', 4: '4',5: '5', 6: '6', 7: '7',8: '8', 9: '9', 10: 'A', 11: 'B', 12: 'C',13: 'D', 14: 'E', 15: 'F'}
        hexadecimal = '' 
        while(decimal > 0): 
            remainder = decimal % 16 
            hexadecimal = conversion_table[remainder] + hexadecimal 
            decimal = decimal // 16 
        print(hexadecimal) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Converstion of Decimal to octal number 
def decimaltoOctal(deciNum): 
    try: 
        octalNum = 0 
        countval = 1 
        dNo = deciNum 
        while (deciNum != 0): 
            remainder = deciNum % 8 
            octalNum += remainder * countval 
            countval = countval * 10 
            deciNum //= 8 
        print(octalNum) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Encryption of a Image using XOR operation on byte array of image 
def imageEncrypt(): 
    try: 
        path = input(r"Enter path of Image : ") 
        key = int(input("Enter Key for encryption of Image : ")) 
        print("The path of file : ", path) 
        print("Key for encryption : ", key) 
        fin = open(path, 'rb') 
        image = fin.read() 
        fin.close() 
        image = bytearray(image) 
        for index, values in enumerate(image): 
            image[index] = values ^ key 
        fin = open(path, 'wb') 
        fin.write(image) 
        fin.close() 
        print("Encryption Done...") 
    except Exception: 
        print("Error caught : ", Exception.name) 
#Encryption of string using symmetric-key encryption generated by using fernat generation of 32 bit key 
def stringEncrypt(): 
    try: 
        message = input("Enter a string:") 
        key = Fernet.generate_key()
        fernet = Fernet(key)
        encMessage = fernet.encrypt(message.encode()) 
        print("Key:",key,"\n") 
        print("original string: ", message) 
        print("encrypted string: ", encMessage) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#DECRYPTIONS #Converstion of ASCII values to its resulting string 
def ascii_string(): 
    try: 
        i=0 
        l=[] 
        while(i!=-1): 
            i=int(input("Enter ascii value(-1 to end): ")) 
            if(i!=-1): 
                l.append(i) 
        res = "" 
        for val in l: 
            res = res + chr(val) 
        print("String is "+res) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Converstion of Binary number to a Decimal number 
def binaryToDecimal(binary): 
    try: 
        binary1 = binary 
        decimal, i, n = 0, 0, 0 
        while(binary != 0): 
            dec = binary % 10 
            if(dec > 1): 
                print("Illegal Entry") 
                return 
            decimal = decimal + dec * pow(2, i) 
            binary = binary//10 
            i += 1 
        print(decimal) 
    except Exception: 
        print('Error caught : ', Exception.name,"Enter only numbers") 
#Converstion of Hexal number to decimal number 
def hexalToDecimal(string): 
    try: 
        print("Decimal value of the string is",int(string, 16)) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Converstion of Ocatal number to Decimal number 
def octalToDecimal(n): 
    try: 
        print(int(n, 8)) 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Decrypting of image using same key used for encryption(Symmetric key/XOR) 
def imageDecrypt(): 
    try: 
        path = input(r'Enter path of Image : ') 
        key = int(input('Enter Key for encryption of Image : ')) 
        print('The path of file : ', path) 
        print('Note : Encryption key and Decryption key must be same.') 
        print('Key for Decryption : ', key) 
        fin = open(path, 'rb') 
        image = fin.read() 
        fin.close() 
        image = bytearray(image) 
        for index, values in enumerate(image): 
            image[index] = values ^ key 
        fin = open(path, 'wb') 
        fin.write(image) 
        fin.close() 
        print('Decryption Done...') 
    except Exception: 
        print('Error caught : ', Exception.name) 
#Decryption of String using symmetric-key cryptography generated by using fernat generation of 32 bit key used for encryption 
def stringDecrypt(): 
    try: 
        message = input("Enter Encrypted string: ") 
        print("meassage: ",message) 
        encMessage=message.encode()
        key = (input("Enter the key generated:")).encode()
        fernet = Fernet(key) 
        decMessage = fernet.decrypt(encMessage).decode() 
        print("encrypted string: ", encMessage) 
        print("decrypted string: ", decMessage) 
    except Exception: 
        print('Error caught : ', Exception.name) 
print("\t\t\t---SECRET COMMUNICATION---") 
while True: 
    print("\tMAIN MENU\n1. Encode.\n2. Decode.\n3. Exit") 
    ch = int(input("Enter Your Choice: ")) 
    if(ch == 1): 
        while True:
            print("\tEncoding\n1. String to ASCII values\n2. Base Conversions\n3. Image Encryption\n4. String Encryption\n5.Return\n") 
            ch1 = int(input("Enter your choice: ")) 
            if(ch1==1): 
                string_ascii() 
            elif(ch1==2): 
                while True: 
                    print("\tBase Convertions\n1. Decimal number to Binary number\n2. Decimal number to Hexal number\n3. Decimal number to Octal number\n4. Return") 
                    ch2 = int(input("Enter your choice: ")) 
                    if(ch2 == 1):
                        num = int(input("Enter a number: ")) 
                        print("Binary number is: ",end="") 
                        decimalToBinary(num)
                        print("\n")
                    elif(ch2 == 2): 
                        num = int(input("Enter a number: ")) 
                        print("Hexal number is: ",end="")
                        decimalToHexal(num)
                    elif(ch2 == 3): 
                        num = int(input("Enter a number: "))
                        print("Octal number is: ",end="") 
                        decimaltoOctal(num) 
                    elif(ch2 == 4): 
                        break
                    else: 
                        print("Enter a valid choice") 
            elif(ch1 == 3): 
                imageEncrypt() 
            elif(ch1 == 4): 
                stringEncrypt() 
            elif(ch1 == 5): 
                break 
            else: 
                print("Enter a valid choice") 
    elif(ch == 2): 
        while True:
            print("\tDecoding\n1. ASCII values to String\n2. Base Conversions\n3. Image Decryption\n4. String Decryption\n5. Return\n") 
            ch1 = int(input("Enter your choice: ")) 
            if(ch1 == 1): 
                ascii_string()
            elif(ch1 == 2): 
                while True:
                    print("\tBase Convertions\n1. Binary number to Decimal number\n2. Hexal number to Decimal number\n3. Octal number to Decimal number\n4. Return\n") 
                    ch2 = int(input("Enter your choice:")) 
                    if(ch2 == 1): 
                        num = int(input("Enter a Binary number: ")) 
                        print("Decimal number is: ",end="") 
                        binaryToDecimal(num)
                    elif(ch2 == 2):
                        num = input("Enter a Hexal number: ") 
                        print("Decimal number is: ",end="") 
                        hexalToDecimal(num) 
                    elif(ch2 == 3): 
                        num = int(input("Enter an Octal number: ")) 
                        print("Decimal number is: ",end="") 
                        octalToDecimal(num) 
                    elif(ch2 == 4): 
                        break 
                    else: print("Enter a valid choice") 
            elif(ch1 == 3): 
                imageDecrypt() 
            elif(ch1 == 4): 
                stringDecrypt()
            elif(ch1 == 5):
                break 
    elif(ch == 3): 
        print("\t\t\t---END OF EXECUTION---")
        break
    else: 
        print("Enter a valid choice") 
#THE END
